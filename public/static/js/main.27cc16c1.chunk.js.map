{"version":3,"sources":["skillbox.png","firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Description","DescriptionC","customAct","Category","Level","Source","Time","Step","addCustom","custom","initial","currentLevel","finished","start","random","step","trainingSubject","hasDescription","inputOptions","Activities","handleChange","bind","assertThisInitialized","handleSubmit","handleSelect","handleInitial","e","setState","defineProperty","target","name","value","preventDefault","selectRef","database","ref","select","update","initialRef","itemsRef","item","parseInt","push","_this2","on","snapshot","rDesc","val","currentStep","Random","showSubject","showTheLevel","newState","id","_this3","actDone","actNotUse","exportRandom","descriptionRef","done","notUse","descriptions","activities","key","hasOwnProperty","inputRef","console","log","concat","description","Math","floor","length","randomActRefDescription","DescriptionR","itemId","child","set","_this4","react_default","a","createElement","className","src","logo","width","map","onSubmit","class","onChange","type","placeholder","onClick","href","removeItem","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27cc16c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skillbox.a07b6d2f.png\";","import firebase from 'firebase'\r\nconst config = {\r\n    apiKey: \"AIzaSyCDEBPky0YohO1YG3L0ubJrI0pV1B5CnOo\",\r\n    authDomain: \"skillbox-9fa58.firebaseapp.com\",\r\n    databaseURL: \"https://skillbox-9fa58.firebaseio.com\",\r\n    projectId: \"skillbox-9fa58\",\r\n    storageBucket: \"skillbox-9fa58.appspot.com\",\r\n    messagingSenderId: \"621423399264\",\r\n    appId: \"1:621423399264:web:20c417aa3770a43b\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;","import React, { Component, Fragment } from \"react\";\nimport \"./App.css\";\nimport firebase from \"./firebase.js\";\nimport logo from \"./skillbox.png\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Description: \"\",\n      DescriptionC: \"\",\n      customAct: [],\n      Category: \"\",\n      Level: \"\",\n      Source: \"\",\n      Time: \"\",\n      Step: \"\",\n      addCustom: \"\",\n      custom: \"\",\n      initial: \"\",\n      currentLevel: \"\",\n      finished: \"\",\n      start: \"\",\n      random: \"\",\n      step: \"\",\n      trainingSubject: \"\",\n      hasDescription: false,\n      inputOptions: [],\n      Activities: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleInitial = this.handleInitial.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleSelect(e) {\n    e.preventDefault();\n    const selectRef = firebase.database().ref(\"inputOptions\");\n    const select = {\n      currentLevel: this.state.currentLevel,\n      trainingSubject: this.state.trainingSubject,\n      initial: this.state.initial,\n    };\n    selectRef.update(select);\n    this.setState({\n      currentLevel: \"\",\n      trainingSubject: \"\",\n      initial: \"no\",\n    });\n  }\n  handleInitial(e) {\n    e.preventDefault();\n    const initialRef = firebase.database().ref(\"inputOptions\");\n    const initial = {\n      initial: this.state.initial\n    };\n    initialRef.update(initial);\n    this.setState({\n      initial: \"yes\"\n    });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const itemsRef = firebase.database().ref(\"Activities\");\n    const item = {\n      Description: this.state.Description,\n      Category: this.state.Category,\n      Level: this.state.Level,\n      Source: this.state.Source,\n      Time: this.state.Time,\n      Step: parseInt(this.state.Step)\n    };\n    itemsRef.push(item);\n    this.setState({\n      Description: \"\",\n      Category: \"\",\n      Level: \"\",\n      Source: \"\",\n      Time: \"\",\n      Step:\"\",\n    });\n  }\n\n\n  componentDidMount() {\n    const randDescr = firebase.database().ref(\"randomAct/DescriptionR\");\n    randDescr.on(\"value\", snapshot => {\n      const rDesc = snapshot.val();\n      this.setState({ rDesc: rDesc });\n    });\n    const stepOptions = firebase.database().ref(\"inputOptions/step\");\n    stepOptions.on(\"value\", snapshot => {\n      const currentStep = snapshot.val();\n      this.setState({ currentStep: currentStep });\n    });\n    const exportRandom = firebase.database().ref(\"inputOptions/random\");\n    exportRandom.on(\"value\", snapshot => {\n      const Random = snapshot.val();\n      this.setState({ Random: Random });\n    });\n    const showObject = firebase.database().ref(\"inputOptions/trainingSubject\");\n    showObject.on(\"value\", snapshot => {\n      const showSubject = snapshot.val();\n      this.setState({ showSubject: showSubject });\n    });\n    const showLevel = firebase.database().ref(\"inputOptions/currentLevel\");\n    showLevel.on(\"value\", snapshot => {\n      const showTheLevel = snapshot.val();\n      this.setState({ showTheLevel: showTheLevel });\n    });\n    const itemsRef = firebase.database().ref(\"Activities\");\n    const selectRef = firebase.database().ref(\"inputOptions\");\n    itemsRef.on(\"value\", snapshot => {\n      let Activities = snapshot.val();\n      let newState = [];\n      for (let item in Activities) {\n        newState.push({\n          id: item,\n          Description: Activities[item].Description,\n          Category: Activities[item].Category,\n          Level: Activities[item].Level,\n          Source: Activities[item].Source,\n          Time: Activities[item].Time,\n          Step: Activities[item].Step\n        });\n      }\n      this.setState({\n        Activities: newState\n      });\n    });\n\n    selectRef.on(\"value\", snapshot => {\n      let inputOptions = snapshot.val();\n      let newState = [];\n      newState.push({\n        currentLevel: inputOptions.currentLevel,\n        finished: inputOptions.finished,\n        initial: inputOptions.initial,\n        start: inputOptions.start,\n        trainingSubject: inputOptions.trainingSubject\n      });\n      this.setState({\n        inputOptions: newState,\n        trainingSubject: inputOptions.trainingSubject\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    const actDone = firebase.database().ref(\"inputOptions/done\");\n    const actNotUse = firebase.database().ref(\"inputOptions/notUse\");\n    const exportRandom = firebase.database().ref(\"inputOptions/random\");\n    const descriptionRef = firebase.database().ref(\"Activities\");\n    let random = \"\";\n    let done = \"\";\n    let notUse = \"\";\n    actNotUse.on(\"value\", snapshot => {\n      notUse = snapshot.val();\n    });\n    actDone.on(\"value\", snapshot => {\n      done = snapshot.val();\n    });\n\n    let descriptions = [];\n    exportRandom.on(\"value\", snapshot => {\n      random = snapshot.val();\n    });\n\n    descriptionRef.on(\"value\", snapshot => {\n      let activities = snapshot.val();\n      for (var key in activities) {\n        if (activities.hasOwnProperty(key)) {\n          descriptions.push(activities[key].Description);\n\n          if (done === \"yes\") {\n            const inputRef = firebase.database().ref(\"inputOptions\");\n            if (this.state.rDesc === activities[key].Description) {\n              console.log(\"test\");\n              const itemRef = firebase.database().ref(`/Activities/${key}`);\n              itemRef.update({Step: 9});\n              inputRef.update({done: \"no\"});\n              \n            }\n          }\n          if (notUse === \"yes\") {\n            const inputRef = firebase.database().ref(\"inputOptions\");\n            if (this.state.rDesc === activities[key].Description) {\n              console.log(\"test\");\n              const itemRef = firebase.database().ref(`/Activities/${key}`);\n              itemRef.update({Step: 0});\n              inputRef.update({notUse: \"no\"});\n            }\n          }\n        }\n        if (random === \"yes\") {\n\n            if (activities[key].Step === this.state.currentStep){\n              let description =\n              descriptions[Math.floor(Math.random() * descriptions.length)];\n              console.log(this.state.currentStep);\n          const randomActRefDescription = firebase.database().ref(\"randomAct\");\n          const inputRef = firebase.database().ref(\"inputOptions\");\n          randomActRefDescription.update({\n            DescriptionR: description\n          });\n          inputRef.update({\n            random: \"no\"\n          });}\n        }\n      }\n    });\n\n   \n  }\n\n  removeItem(itemId) {\n    const itemRef = firebase.database().ref().child(`/Activities/${itemId}/Step`);\n\n    itemRef.set(0);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <header>\n          <div className=\"wrapper\">\n            <img id = \"logo\"src={logo} width=\"60px\" />\n          </div>\n        </header>\n        <div className=\"container\">\n          {this.state.inputOptions.map(item => {\n            if (item.initial == \"no\") {\n              return (\n                <section className=\"add-item\">\n                  <form onSubmit={this.handleSubmit}>\n                    <h3 class=\"title\">Add a custom activity if you want</h3>\n                    <select class = \"select\"\n                      name=\"Category\"\n                      onChange={this.handleChange}\n                      value={this.state.Category}\n                    >\n                      <option value=\"\">select the category</option>\n                      <option value=\"3d-modeling\">\n                        3d modeling in 3ds max\n                      </option>\n                      <option value=\"leadership\">Leadership</option>\n                    </select>\n                    <input class = \"select\"\n                      type=\"text\"\n                      name=\"Description\"\n                      placeholder=\"Describe the activity\"\n                      onChange={this.handleChange}\n                      value={this.state.Description}\n                    />\n                    <select class = \"select\"\n                      name=\"Level\"\n                      onChange={this.handleChange}\n                      value={this.state.Level}\n                    >\n                      <option value=\"\">Select your level</option>\n                      <option value=\"beginner    \">beginner</option>\n                      <option value=\"intermediate\">intermediate</option>\n                      <option value=\"advanced\">advanced</option>\n                    </select>\n\n                    <select class = \"select\"\n                    type = \"number\"\n                      name=\"Step\"\n                      onChange={this.handleChange}\n                      value={parseInt(this.state.Step)}\n                    >\n                      <option value=\"\">Select the step</option>\n                      <option value={1}>1</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5</option>\n                      <option value={6}>6</option>\n                      <option value={7}>7</option>\n                      <option value={8}>8</option>\n                    </select>\n\n                    <input class = \"select\"\n                      type=\"text\"\n                      name=\"Source\"\n                      placeholder=\"Where can you find the resources?\"\n                      onChange={this.handleChange}\n                      value={this.state.Source}\n                    />\n                    <input class = \"select\"\n                      type=\"text\"\n                      name=\"Time\"\n                      placeholder=\"How long will the activity take?\"\n                      onChange={this.handleChange}\n                      value={this.state.Time}\n                    />\n                    <button class=\"button1\">Add Item</button>\n                  </form>\n                  <form onSubmit={this.handleInitial}>\n                    <button\n                      class=\"button1\"\n                      name=\"initial\"\n                      onClick={this.handleChange}\n                      value=\"yes\"\n                    >\n                      Start new learning goal\n                    </button>\n                  </form>\n                </section>\n              );\n            }\n          })}\n          {this.state.inputOptions.map(item => {\n            if (item.initial == \"yes\") {\n              return (\n                <section className=\"add-item\">\n                  <h3 class=\"title\">Select your learning goal</h3>\n                  <form onSubmit={this.handleSelect}>\n                    <select\n                      name=\"trainingSubject\"\n                      onChange={this.handleChange}\n                      value={this.state.trainingSubject}\n                    >\n                      <option value=\"\">select your learning goal</option>\n                      <option value=\"3d-modeling\">\n                        3d modeling in 3ds max\n                      </option>\n                      <option value=\"leadership\">Leadership</option>\n                    </select>\n                    <select\n                      name=\"currentLevel\"\n                      onChange={this.handleChange}\n                      value={this.state.currentLevel}\n                    >\n                      <option value=\"\">Select your level</option>\n                      <option value=\"beginner    \">beginner</option>\n                      <option value=\"intermediate\">intermediate</option>\n                      <option value=\"advanced\">advanced</option>\n                    </select>\n                    <button\n                      class=\"button1\"\n                      name=\"initial\"\n                      onClick={this.handleChange}\n                      value=\"no\"\n                    >\n                      Submit\n                    </button>\n                  </form>\n                </section>\n              );\n            }\n          })}\n\n          <section className=\"display-item\">\n            <div className=\"wrapper\">\n              <h3>step 1 options</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Level == this.state.showTheLevel&&\n                    item.Step == 1\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                          <p>level: {item.Level}</p>\n                          <p>step: {item.Step}</p>\n                          <p>\n                            required time: {item.Time}\n                            <br></br>\n                            <br></br>\n                            <a class=\"button2\" href={item.Source} target=\"_blank\">\n                              Visit training\n                            </a>\n                            <a\n                              class=\"buttonRemove\"\n                              onClick={() => this.removeItem(item.id)}\n                            >\n                              Remove Item\n                            </a>\n                          </p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n            <div className=\"wrapper\">\n              <h3>step 2 options</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Level == this.state.showTheLevel&&\n                    item.Step == 2\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                          <p>level: {item.Level}</p>\n                          <p>step: {item.Step}</p>\n                          <p>\n                            required time: {item.Time}\n                            <br></br>\n                            <br></br>\n                            <a class=\"button2\" href={item.Source} target=\"_blank\">\n                            Visit training\n                            </a>\n                            <a\n                              class=\"buttonRemove\"\n                              onClick={() => this.removeItem(item.id)}\n                            >\n                              Remove Item\n                            </a>\n                          </p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n            <div className=\"wrapper\">\n              <h3>step 3 options</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Level == this.state.showTheLevel&&\n                    item.Step == 3\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                          <p>level: {item.Level}</p>\n                          <p>step: {item.Step}</p>\n                          <p>\n                            required time: {item.Time}\n                            <br></br>\n                            <br></br>\n                            <a class=\"button2\" href={item.Source} target=\"_blank\">\n                            Visit training\n                            </a>\n                            <a\n                              class=\"buttonRemove\"\n                              onClick={() => this.removeItem(item.id)}\n                            >\n                              Remove Item\n                            </a>\n                          </p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n            <div className=\"wrapper\">\n              <h3>step 4 options</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Level == this.state.showTheLevel&&\n                    item.Step == 4\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                          <p>level: {item.Level}</p>\n                          <p>step: {item.Step}</p>\n                          <p>\n                            required time: {item.Time}\n                            <br></br>\n                            <br></br>\n                            <a class=\"button2\" href={item.Source} target=\"_blank\">\n                            Visit training\n                            </a>\n                            <a\n                              class=\"buttonRemove\"\n                              onClick={() => this.removeItem(item.id)}\n                            >\n                              Remove Item\n                            </a>\n                          </p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n            <div className=\"wrapper\">\n              <h3>step 5 options</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Level == this.state.showTheLevel&&\n                    item.Step == 5\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                          <p>level: {item.Level}</p>\n                          <p>step: {item.Step}</p>\n                          <p>\n                            required time: {item.Time}\n                            <br></br>\n                            <br></br>\n                            <a class=\"button2\" href={item.Source} target=\"_blank\">\n                            Visit training\n                            </a>\n                            <a\n                              class=\"buttonRemove\"\n                              onClick={() => this.removeItem(item.id)}\n                            >\n                              Remove Item\n                            </a>\n                          </p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n            <div className=\"wrapper\">\n              <h3>step 6 options</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Level == this.state.showTheLevel&&\n                    item.Step == 6\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                          <p>level: {item.Level}</p>\n                          <p>step: {item.Step}</p>\n                          <p>\n                            required time: {item.Time}\n                            <br></br>\n                            <br></br>\n                            <a class=\"button2\" href={item.Source} target=\"_blank\">\n                            Visit training\n                            </a>\n                            <a\n                              class=\"buttonRemove\"\n                              onClick={() => this.removeItem(item.id)}\n                            >\n                              Remove Item\n                            </a>\n                          </p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n            <div className=\"wrapper\">\n              <h3>step 7 options</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Level == this.state.showTheLevel&&\n                    item.Step == 7\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                          <p>level: {item.Level}</p>\n                          <p>step: {item.Step}</p>\n                          <p>\n                            required time: {item.Time}\n                            <br></br>\n                            <br></br>\n                            <a class=\"button2\" href={item.Source} target=\"_blank\">\n                            Visit training\n                            </a>\n                            <a\n                              class=\"buttonRemove\"\n                              onClick={() => this.removeItem(item.id)}\n                            >\n                              Remove Item\n                            </a>\n                          </p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n            <div className=\"wrapper\">\n              <h3>step 8 options</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Level == this.state.showTheLevel&&\n                    item.Step == 8\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                          <p>level: {item.Level}</p>\n                          <p>step: {item.Step}</p>\n                          <p>\n                            required time: {item.Time}\n                            <br></br>\n                            <br></br>\n                            <a class=\"button2\" href={item.Source} target=\"_blank\">\n                            Visit training\n                            </a>\n                            <a\n                              class=\"buttonRemove\"\n                              onClick={() => this.removeItem(item.id)}\n                            >\n                              Remove Item\n                            </a>\n                          </p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n            <div className=\"wrapper\">\n              <h3>Finished items</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Step == 9\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n\n            <div className=\"wrapper\">\n              <h3>Removed items</h3>\n              <ul>\n                {this.state.Activities.map(item => {\n                  if (\n                    item.Category == this.state.showSubject &&\n                    item.Step == 0\n                  ) {\n                    return (\n                      <div className=\"display-item\">\n                        <li key={item.id}>\n                          <h4>{item.Description}</h4>\n                          <p>category: {item.Category}</p>\n                        </li>\n                      </div>\n                    );\n                  }\n                })}\n              </ul>\n            </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}